#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:json", "json")

---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ data.values.tap.namespace.secret

---
#@ def registry_secret():
#@  return {
#@    "auths": {
#@      data.values.tap.credentials.registry.host: {
#@        "username": data.values.tap.credentials.registry.username,
#@        "password": data.values.tap.credentials.registry.password
#@      }
#@    }
#@  }
#@ end

---
#@ def tanzunet_secret():
#@  return {
#@    "auths": {
#@      data.values.tap.credentials.tanzunet.host: {
#@        "username": data.values.tap.credentials.tanzunet.username,
#@        "password": data.values.tap.credentials.tanzunet.password
#@      }
#@    }
#@  }
#@ end

---
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.tap.credentials.tanzunet.name
  namespace: #@ data.values.tap.namespace.secret
  annotations:
    kapp.k14s.io/change-group: registry-secret

type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: #@ json.encode(tanzunet_secret())

---
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.tap.credentials.registry.name
  namespace: #@ data.values.tap.namespace.secret
  annotations:
    kapp.k14s.io/change-group: registry-secret

type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: #@ json.encode(registry_secret())

---
apiVersion: secretgen.carvel.dev/v1alpha1
kind: SecretExport
metadata:
  name: #@ data.values.tap.credentials.tanzunet.name
  namespace: #@ data.values.tap.namespace.secret
spec:
  toNamespaces:
  - '*'
